name: build and test matrix multiplication

on:
    push:
        branches:
        - main
        - Luca
    pull_request:
        branches:
        - main
        - Luca

jobs:
    build-and-test:
        runs-on: ubuntu-latest

        steps:
        - name: checkout repository
          uses: actions/checkout@v4
          with:
            submodules: recursive

        - name: set up environment
          run: |
            sudo apt-get update
            sudo apt-get install -y build-essential cmake mpich libmpich-dev

        - name: build project
          run: |
            mkdir build
            cd build
            cmake ..
            cmake --build .

        - name: run tests
          run: |
            cd build
            ctest --output-on-failure --output-log test_results.xml

        - name: upload test results
          if: failure()
          uses: actions/upload-artifact@v4
          with:
            name: test-results
            path: build/test_results.xml

        - name: install Singularity         
          uses: eWaterCycle/setup-singularity@v7
          with:
            singularity-version: 4.1.3
            
        - name: Build Singularity Image
          run: |
            singularity build --fakeroot matrix_multiplication.sif sweng_project2.def
            
        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with:
            name: matrix_multiplication
            path: matrix_multiplication.sif
        # install sshpass
        - name: Install sshpass
          run: |
            sudo apt-get install sshpass 
        # scp the singularity file into GUSER@SSH_GALIELO using SSH_PASS secret
        - name: Upload Singularity Image
          run: |
            sshpass -p ${{ secrets.SSH_PASS }} scp -o StrictHostKeyChecking=no matrix_multiplication.sif ${{ vars.GUSER }}@${{ vars.SSH_GALILEO }}:~/        
            sshpass -p ${{ secrets.SSH_PASS }} scp -o StrictHostKeyChecking=no job.sh ${{ vars.GUSER }}@${{ vars.SSH_GALILEO }}:~/
        # using ssh run the job.sh script
        - name: Run Job
          run: |
            sshpass -p ${{ secrets.SSH_PASS }} ssh -o StrictHostKeyChecking=no ${{ vars.GUSER }}@${{ vars.SSH_GALILEO }} 'bash -s' < job.sh
        name: CI

